<div ...attributes>
  <div class="z-10 float-right">
    <button 
      class="text-white bg-yellow-500 hover:bg-yellow-600 focus:ring-4 focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-yellow-600 dark:hover:bg-yellow-700 focus:outline-none dark:focus:ring-yellow-800"
      type="button"
      data-drawer-target="drawer-left"
  data-drawer-show="drawer-left"
      aria-controls="drawer-left"
      {{on "click" (toggle "show" this)}}
    >
      <span class="align-middle">Graph Settings</span>
      <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="play-caret" class="inline mx-1 w-4 h-4" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M176 354.9V157.1c0-10.7 13-16.1 20.5-8.5l98.3 98.9c4.7 4.7 4.7 12.2 0 16.9l-98.3 98.9c-7.5 7.7-20.5 2.3-20.5-8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z"/>
      </svg>
    </button>
  </div>

  <div id="drawer-right" class={{(concat (unless this.show "hidden ") "fixed right-0 z-40 prose h-screen p-4 overflow-y-auto bg-white w-96 dark:bg-gray-800")}} tabindex="-1" aria-labelledby="drawer-label">
     <h5 id="drawer-label" class="inline-flex items-center mb-4 text-base font-semibold text-gray-500 dark:text-gray-400">
       <svg class="w-5 h-5 mr-2" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
         <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>

       </svg>
       Graph Settings
     </h5>
     <button 
       type="button"
       data-drawer-dismiss="drawer-left" 
       aria-controls="drawer-left"
       {{on "click" (fn (mut this.show) false)}}
       class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" >
        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
        <span class="sr-only">Close menu</span>
     </button>

      
     <label for="gravity" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Gravity: {{this.renderService.gravity}}</label>
      <input 
        id="gravity"
        type="range"
        min="0"
        max="10"
        step="0.5"
        value={{this.renderService.gravity}}
        {{on "input" (fn this.updateSetting "gravity")}}
        class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" />
      
      <label for="scalingRatio" class="block my-2 text-sm font-medium text-gray-900 dark:text-gray-300">Scaling Ration: {{this.renderService.scalingRatio}}</label>
      <input 
        id="scalingRatio"
        type="range"
        min="0"
        max="50"
        step="1"
        value={{this.renderService.scalingRatio}}
        {{on "input" (fn this.updateSetting "scalingRatio")}}
        class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" />

      
      <label for="barnesHutOptimize-toggle" class="inline-flex relative items-center cursor-pointer my-2">
        <input 
          type="checkbox" 
          value="" 
          id="barnesHutOptimize-toggle"
          class="sr-only peer" 
          checked={{this.renderService.barnesHutOptimize}}
          {{on "change" (fn this.updateCheckbox "barnesHutOptimize")}} />
        <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
        <span class="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">Barnes Hut Optimize</span>
      </label>

      <label for="barnesHutTheta" class="block my-2 text-sm font-medium text-gray-900 dark:text-gray-300">Barnes Hut Theta: {{this.renderService.barnesHutTheta}}</label>
      <input 
        id="barnesHutTheta"
        type="range"
        min="0"
        max="4"
        step="0.2"
        value={{this.renderService.barnesHutTheta}}
        {{on "input" (fn this.updateSetting "barnesHutTheta")}}
        class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" />

      <label for="lingLongMode-toggle" class="inline-flex relative items-center cursor-pointer my-2">
        <input 
          type="checkbox" 
          id="lingLongMode-toggle"
          class="sr-only peer" 
          checked={{this.renderService.linLogMode}}
          {{on "change" (fn this.updateCheckbox "linLogMode")}} />
        <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
        <span class="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">LinLog Mode</span>
      </label>

      <label for="edgeWeightInfluence" class="block my-2 text-sm font-medium text-gray-900 dark:text-gray-300">Edge Weight Influence: {{this.renderService.edgeWeightInfluence}}</label>
      <input 
        id="edgeWeightInfluence"
        type="range"
        min="0"
        max="10"
        step="0.5"
        value={{this.renderService.edgeWeightInfluence}}
        {{on "input" (fn this.updateSetting "edgeWeightInfluence")}}
        class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" />

      <label for="iterations" class="block my-2 text-sm font-medium text-gray-900 dark:text-gray-300">Layout Iterations: {{this.renderService.iterations}}</label>
      <input 
        id="iterations"
        type="range"
        min="0"
        max="100"
        step="5"
        value={{this.renderService.iterations}}
        {{on "input" (fn this.updateSetting "iterations")}}
        class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" />

      <hr/>
      <h4>Further Ideas what could be configurable:</h4>
      <p>Checkboxes for further filtering?</p>
      <p>Strongly connected components?</p>
      <p>Only keep largest components?</p>
      <p>Filter for sorts of labels or contents of connectionLabels</p>
      <p>Filter for sorts of labels or contents of nodeLabels</p>
      <p>Cluste on node property</p>

     </div>
  </div>


